{"ast":null,"code":"import toast from 'react-hot-toast';\nexport async function usernameValidate(values) {\n  let errors = {};\n  if (!values.username) {\n    errors.username = 'Username Required';\n  } else if (values.username.includes(\" \")) {\n    errors.username = 'Invalid Username';\n  }\n  return errors;\n}\nexport async function passwordValidate(values) {\n  const errors = passwordVerify({}, values);\n  return errors;\n}\n\n/**validate reset password */\nexport async function resetPasswordValidation(values) {\n  const errors = passwordValidate({}, values);\n  if (values.password !== values.confirm_pwd) {\n    errors.exist = toast.error(\"Password not match...!\");\n  }\n  return errors;\n}\n\n/** validate password  */\n\nfunction passwordVerify(errors = {}, values) {\n  const specialChars = /[`!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/;\n  if (!values.password) {\n    errors.password = toast.error(\"Password Required...!\");\n  } else if (values.password.includes(\" \")) {\n    errors.password = toast.error(\"Wrong Password...!\");\n  } else if (values.password.length < 4) {\n    errors.password = toast.error(\"Password length must be greater than 4\");\n  } else if (!specialChars.test(values.password)) {\n    errors.password = toast.error(\"Password must have special characters\");\n  }\n  return errors;\n}\nexport default passwordVerify;\n\n/**validate username */\nfunction usernameVerify(error = {}, values) {\n  if (!values.username) {\n    error.username = toast.error('Username Required..!');\n  } else if (values.username.includes(\" \")) {\n    error.username = toast.error('Invalid Username...!');\n  }\n  return error;\n}","map":{"version":3,"names":["toast","usernameValidate","values","errors","username","includes","passwordValidate","passwordVerify","resetPasswordValidation","password","confirm_pwd","exist","error","specialChars","length","test","usernameVerify"],"sources":["/Users/tulasi/Desktop/PROJECTS/hdl_testing/client/src/helper/validate.js"],"sourcesContent":["import toast from 'react-hot-toast'\nexport async function usernameValidate(values) {\n    let errors = {};\n\n    if (!values.username) {\n        errors.username = 'Username Required';\n    } else if (values.username.includes(\" \")) {\n        errors.username = 'Invalid Username';\n    }\n\n    return errors; \n}\n\nexport async function passwordValidate(values) {\n    const errors = passwordVerify({}, values);\n    return errors;\n}\n\n/**validate reset password */\nexport async function resetPasswordValidation(values) {\n    const errors = passwordValidate({}, values);\n    if(values.password !== values.confirm_pwd){\n        errors.exist = toast.error(\"Password not match...!\");\n    }\n    return errors;\n}\n\n/** validate password  */\n\nfunction passwordVerify(errors = {}, values) {\n    const specialChars = /[`!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/;\n\n    if (!values.password) {\n        errors.password = toast.error(\"Password Required...!\");\n    } else if (values.password.includes(\" \")) {\n        errors.password = toast.error(\"Wrong Password...!\");\n    } else if (values.password.length < 4) {\n        errors.password = toast.error(\"Password length must be greater than 4\");\n    } else if (!specialChars.test(values.password)) {\n        errors.password = toast.error(\"Password must have special characters\");\n    }\n\n    return errors;\n}\n\nexport default passwordVerify;\n\n\n/**validate username */\nfunction usernameVerify(error = {}, values){\n    if(!values.username){\n        error.username = toast.error('Username Required..!');\n    }else if(values.username.includes(\" \")){\n        error.username = toast.error('Invalid Username...!')\n    }\n\n    return error;\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,iBAAiB;AACnC,OAAO,eAAeC,gBAAgBA,CAACC,MAAM,EAAE;EAC3C,IAAIC,MAAM,GAAG,CAAC,CAAC;EAEf,IAAI,CAACD,MAAM,CAACE,QAAQ,EAAE;IAClBD,MAAM,CAACC,QAAQ,GAAG,mBAAmB;EACzC,CAAC,MAAM,IAAIF,MAAM,CAACE,QAAQ,CAACC,QAAQ,CAAC,GAAG,CAAC,EAAE;IACtCF,MAAM,CAACC,QAAQ,GAAG,kBAAkB;EACxC;EAEA,OAAOD,MAAM;AACjB;AAEA,OAAO,eAAeG,gBAAgBA,CAACJ,MAAM,EAAE;EAC3C,MAAMC,MAAM,GAAGI,cAAc,CAAC,CAAC,CAAC,EAAEL,MAAM,CAAC;EACzC,OAAOC,MAAM;AACjB;;AAEA;AACA,OAAO,eAAeK,uBAAuBA,CAACN,MAAM,EAAE;EAClD,MAAMC,MAAM,GAAGG,gBAAgB,CAAC,CAAC,CAAC,EAAEJ,MAAM,CAAC;EAC3C,IAAGA,MAAM,CAACO,QAAQ,KAAKP,MAAM,CAACQ,WAAW,EAAC;IACtCP,MAAM,CAACQ,KAAK,GAAGX,KAAK,CAACY,KAAK,CAAC,wBAAwB,CAAC;EACxD;EACA,OAAOT,MAAM;AACjB;;AAEA;;AAEA,SAASI,cAAcA,CAACJ,MAAM,GAAG,CAAC,CAAC,EAAED,MAAM,EAAE;EACzC,MAAMW,YAAY,GAAG,yCAAyC;EAE9D,IAAI,CAACX,MAAM,CAACO,QAAQ,EAAE;IAClBN,MAAM,CAACM,QAAQ,GAAGT,KAAK,CAACY,KAAK,CAAC,uBAAuB,CAAC;EAC1D,CAAC,MAAM,IAAIV,MAAM,CAACO,QAAQ,CAACJ,QAAQ,CAAC,GAAG,CAAC,EAAE;IACtCF,MAAM,CAACM,QAAQ,GAAGT,KAAK,CAACY,KAAK,CAAC,oBAAoB,CAAC;EACvD,CAAC,MAAM,IAAIV,MAAM,CAACO,QAAQ,CAACK,MAAM,GAAG,CAAC,EAAE;IACnCX,MAAM,CAACM,QAAQ,GAAGT,KAAK,CAACY,KAAK,CAAC,wCAAwC,CAAC;EAC3E,CAAC,MAAM,IAAI,CAACC,YAAY,CAACE,IAAI,CAACb,MAAM,CAACO,QAAQ,CAAC,EAAE;IAC5CN,MAAM,CAACM,QAAQ,GAAGT,KAAK,CAACY,KAAK,CAAC,uCAAuC,CAAC;EAC1E;EAEA,OAAOT,MAAM;AACjB;AAEA,eAAeI,cAAc;;AAG7B;AACA,SAASS,cAAcA,CAACJ,KAAK,GAAG,CAAC,CAAC,EAAEV,MAAM,EAAC;EACvC,IAAG,CAACA,MAAM,CAACE,QAAQ,EAAC;IAChBQ,KAAK,CAACR,QAAQ,GAAGJ,KAAK,CAACY,KAAK,CAAC,sBAAsB,CAAC;EACxD,CAAC,MAAK,IAAGV,MAAM,CAACE,QAAQ,CAACC,QAAQ,CAAC,GAAG,CAAC,EAAC;IACnCO,KAAK,CAACR,QAAQ,GAAGJ,KAAK,CAACY,KAAK,CAAC,sBAAsB,CAAC;EACxD;EAEA,OAAOA,KAAK;AAChB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}