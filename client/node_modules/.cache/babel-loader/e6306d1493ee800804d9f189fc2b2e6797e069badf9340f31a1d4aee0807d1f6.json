{"ast":null,"code":"import toast from 'react-hot-toast';\n// export async function usernameValidate(values) {\n//     let errors = {};\n\n//     if (!values.username) {\n//         errors.username = 'Username Required';\n//     } else if (values.username.includes(\" \")) {\n//         errors.username = 'Invalid Username';\n//     }\n\n//     return errors; \n// }\nexport async function usernameValidate(values) {\n  const errors = usernameVerify({}, values);\n  return errors;\n}\n\n// export async function passwordValidate(values) {\n//     let errors = {};\n\n//     if (!values.password) {\n//         errors.pas = 'Username Required';\n//     } else if (values.username.includes(\" \")) {\n//         errors.username = 'Invalid Username';\n//     }\n\n//     return errors; \n// }\nexport async function passwordValidate(values) {\n  const errors = passwordVerify({}, values);\n  return errors;\n}\n\n/** validate password  */\n\nfunction passwordVerify(errors = {}, values) {\n  const specialChars = /[`!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/;\n  if (!values.password) {\n    errors.password = toast.error(\"Password Required...!\");\n  } else if (values.password.includes(\" \")) {\n    errors.password = toast.error(\"Wrong Password...!\");\n  } else if (values.password.length < 4) {\n    errors.password = toast.error(\"Password length must be greater than 4\");\n  } else if (!specialChars.test(values.password)) {\n    errors.password = toast.error(\"Password must have special characters\");\n  }\n  return errors;\n}\nexport default passwordVerify;\n\n/**validate username */\nfunction usernameVerify(errors = {}, values) {\n  if (!values.username) {\n    errors.username = toast.error(\"Username Required..!\");\n  } else if (values.username.includes(\" \")) {\n    errors.username = toast.error(\"Invalid Username...!\");\n  }\n  return errors;\n}","map":{"version":3,"names":["toast","usernameValidate","values","errors","usernameVerify","passwordValidate","passwordVerify","specialChars","password","error","includes","length","test","username"],"sources":["/Users/tulasi/Desktop/PROJECTS/hdl_testing/client/src/helper/validate.js"],"sourcesContent":["import toast from 'react-hot-toast'\n// export async function usernameValidate(values) {\n//     let errors = {};\n\n//     if (!values.username) {\n//         errors.username = 'Username Required';\n//     } else if (values.username.includes(\" \")) {\n//         errors.username = 'Invalid Username';\n//     }\n\n//     return errors; \n// }\nexport async function usernameValidate(values) {\n    const errors = usernameVerify({}, values);\n    return errors;\n}\n\n// export async function passwordValidate(values) {\n//     let errors = {};\n\n//     if (!values.password) {\n//         errors.pas = 'Username Required';\n//     } else if (values.username.includes(\" \")) {\n//         errors.username = 'Invalid Username';\n//     }\n\n//     return errors; \n// }\nexport async function passwordValidate(values) {\n    const errors = passwordVerify({}, values);\n    return errors;\n}\n\n/** validate password  */\n\nfunction passwordVerify(errors = {}, values) {\n    const specialChars = /[`!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/;\n\n    if (!values.password) {\n        errors.password = toast.error(\"Password Required...!\");\n    } else if (values.password.includes(\" \")) {\n        errors.password = toast.error(\"Wrong Password...!\");\n    } else if (values.password.length < 4) {\n        errors.password = toast.error(\"Password length must be greater than 4\");\n    } else if (!specialChars.test(values.password)) {\n        errors.password = toast.error(\"Password must have special characters\");\n    }\n\n    return errors;\n}\n\nexport default passwordVerify;\n\n\n/**validate username */\nfunction usernameVerify(errors = {}, values){\n    if(!values.username){\n        errors.username = toast.error(\"Username Required..!\");\n    }else if(values.username.includes(\" \")){\n        errors.username = toast.error(\"Invalid Username...!\")\n    }\n\n    return errors;\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,iBAAiB;AACnC;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO,eAAeC,gBAAgBA,CAACC,MAAM,EAAE;EAC3C,MAAMC,MAAM,GAAGC,cAAc,CAAC,CAAC,CAAC,EAAEF,MAAM,CAAC;EACzC,OAAOC,MAAM;AACjB;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO,eAAeE,gBAAgBA,CAACH,MAAM,EAAE;EAC3C,MAAMC,MAAM,GAAGG,cAAc,CAAC,CAAC,CAAC,EAAEJ,MAAM,CAAC;EACzC,OAAOC,MAAM;AACjB;;AAEA;;AAEA,SAASG,cAAcA,CAACH,MAAM,GAAG,CAAC,CAAC,EAAED,MAAM,EAAE;EACzC,MAAMK,YAAY,GAAG,yCAAyC;EAE9D,IAAI,CAACL,MAAM,CAACM,QAAQ,EAAE;IAClBL,MAAM,CAACK,QAAQ,GAAGR,KAAK,CAACS,KAAK,CAAC,uBAAuB,CAAC;EAC1D,CAAC,MAAM,IAAIP,MAAM,CAACM,QAAQ,CAACE,QAAQ,CAAC,GAAG,CAAC,EAAE;IACtCP,MAAM,CAACK,QAAQ,GAAGR,KAAK,CAACS,KAAK,CAAC,oBAAoB,CAAC;EACvD,CAAC,MAAM,IAAIP,MAAM,CAACM,QAAQ,CAACG,MAAM,GAAG,CAAC,EAAE;IACnCR,MAAM,CAACK,QAAQ,GAAGR,KAAK,CAACS,KAAK,CAAC,wCAAwC,CAAC;EAC3E,CAAC,MAAM,IAAI,CAACF,YAAY,CAACK,IAAI,CAACV,MAAM,CAACM,QAAQ,CAAC,EAAE;IAC5CL,MAAM,CAACK,QAAQ,GAAGR,KAAK,CAACS,KAAK,CAAC,uCAAuC,CAAC;EAC1E;EAEA,OAAON,MAAM;AACjB;AAEA,eAAeG,cAAc;;AAG7B;AACA,SAASF,cAAcA,CAACD,MAAM,GAAG,CAAC,CAAC,EAAED,MAAM,EAAC;EACxC,IAAG,CAACA,MAAM,CAACW,QAAQ,EAAC;IAChBV,MAAM,CAACU,QAAQ,GAAGb,KAAK,CAACS,KAAK,CAAC,sBAAsB,CAAC;EACzD,CAAC,MAAK,IAAGP,MAAM,CAACW,QAAQ,CAACH,QAAQ,CAAC,GAAG,CAAC,EAAC;IACnCP,MAAM,CAACU,QAAQ,GAAGb,KAAK,CAACS,KAAK,CAAC,sBAAsB,CAAC;EACzD;EAEA,OAAON,MAAM;AACjB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}