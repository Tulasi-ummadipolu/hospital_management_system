{"ast":null,"code":"var _jsxFileName = \"/Users/tulasi/Desktop/PROJECTS/hdl_testing/client/src/components/SerialNumberGeneration.js\",\n  _s = $RefreshSig$();\n// import React from 'react'\n\n// export default function SerialNumberGeneration() {\n//   return (\n//     <div>SerialNumberGeneration</div>\n//   )\n// }\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport styles from '../styles/SerialNumberGeneration.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SerialNumberGeneration() {\n  _s();\n  const [componentType, setComponentType] = useState('');\n  const [productionStatus, setProductionStatus] = useState('');\n  const [n2, setN2] = useState('');\n  const [flavor, setFlavor] = useState('');\n  const [serialNumbers, setSerialNumbers] = useState([]);\n  const [batch, setBatch] = useState(false);\n  const [feedback, setFeedback] = useState('');\n  const handleGenerate = event => {\n    event.preventDefault();\n\n    // Sample logic for generating serial numbers (should be replaced with actual implementation)\n    const generateSerialNumbers = (componentType, productionStatus, n2, flavor, isBatch) => {\n      // Placeholder logic for serial number generation\n      const baseSerial = `20U${componentType}${productionStatus}${n2}${flavor}`;\n      if (isBatch) {\n        return Array.from({\n          length: 10\n        }, (_, i) => `${baseSerial}${String(i + 1).padStart(4, '0')}`);\n      } else {\n        return [`${baseSerial}${String(1).padStart(4, '0')}`];\n      }\n    };\n    const generatedSerialNumbers = generateSerialNumbers(componentType, productionStatus, n2, flavor, batch);\n    setSerialNumbers(generatedSerialNumbers);\n    setFeedback('Serial numbers generated successfully!');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: styles.header,\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/home\",\n        className: styles.backLink,\n        children: \"\\u2190 Back to Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: styles.title,\n        children: \"Serial Number Generation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.content,\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleGenerate,\n        className: styles.form,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.field,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"componentType\",\n            children: \"Component Type:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"componentType\",\n            type: \"text\",\n            value: componentType,\n            onChange: e => setComponentType(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.field,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"productionStatus\",\n            children: \"Production Status:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"productionStatus\",\n            type: \"text\",\n            value: productionStatus,\n            onChange: e => setProductionStatus(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.field,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"n2\",\n            children: \"N2 (Component Placement & Modules):\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"n2\",\n            type: \"text\",\n            value: n2,\n            onChange: e => setN2(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.field,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"flavor\",\n            children: \"Flavor (N3):\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"flavor\",\n            type: \"number\",\n            value: flavor,\n            onChange: e => setFlavor(e.target.value),\n            min: \"0\",\n            max: \"4\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.field,\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: batch,\n              onChange: () => setBatch(!batch)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this), \"Generate in Batch\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: styles.submitBtn,\n          children: \"Generate Serial Numbers\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), feedback && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.feedback,\n        children: feedback\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 22\n      }, this), serialNumbers.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.results,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Generated Serial Numbers:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: serialNumbers.map((serial, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: serial\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: styles.footer,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\xA9 2024 Your Company\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(SerialNumberGeneration, \"O4SNXY8IV/h1WPmEOrav71qzkvw=\");\n_c = SerialNumberGeneration;\nvar _c;\n$RefreshReg$(_c, \"SerialNumberGeneration\");","map":{"version":3,"names":["React","useState","Link","styles","jsxDEV","_jsxDEV","SerialNumberGeneration","_s","componentType","setComponentType","productionStatus","setProductionStatus","n2","setN2","flavor","setFlavor","serialNumbers","setSerialNumbers","batch","setBatch","feedback","setFeedback","handleGenerate","event","preventDefault","generateSerialNumbers","isBatch","baseSerial","Array","from","length","_","i","String","padStart","generatedSerialNumbers","className","container","children","header","to","backLink","fileName","_jsxFileName","lineNumber","columnNumber","title","content","onSubmit","form","field","htmlFor","id","type","value","onChange","e","target","required","min","max","checked","submitBtn","results","map","serial","index","footer","_c","$RefreshReg$"],"sources":["/Users/tulasi/Desktop/PROJECTS/hdl_testing/client/src/components/SerialNumberGeneration.js"],"sourcesContent":["// import React from 'react'\n\n// export default function SerialNumberGeneration() {\n//   return (\n//     <div>SerialNumberGeneration</div>\n//   )\n// }\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport styles from '../styles/SerialNumberGeneration.module.css';\n\nexport default function SerialNumberGeneration() {\n  const [componentType, setComponentType] = useState('');\n  const [productionStatus, setProductionStatus] = useState('');\n  const [n2, setN2] = useState('');\n  const [flavor, setFlavor] = useState('');\n  const [serialNumbers, setSerialNumbers] = useState([]);\n  const [batch, setBatch] = useState(false);\n  const [feedback, setFeedback] = useState('');\n\n  const handleGenerate = (event) => {\n    event.preventDefault();\n\n    // Sample logic for generating serial numbers (should be replaced with actual implementation)\n    const generateSerialNumbers = (componentType, productionStatus, n2, flavor, isBatch) => {\n      // Placeholder logic for serial number generation\n      const baseSerial = `20U${componentType}${productionStatus}${n2}${flavor}`;\n      if (isBatch) {\n        return Array.from({ length: 10 }, (_, i) => `${baseSerial}${String(i + 1).padStart(4, '0')}`);\n      } else {\n        return [`${baseSerial}${String(1).padStart(4, '0')}`];\n      }\n    };\n\n    const generatedSerialNumbers = generateSerialNumbers(componentType, productionStatus, n2, flavor, batch);\n    setSerialNumbers(generatedSerialNumbers);\n    setFeedback('Serial numbers generated successfully!');\n  };\n\n  return (\n    <div className={styles.container}>\n      <header className={styles.header}>\n        <Link to=\"/home\" className={styles.backLink}>\n          ← Back to Home\n        </Link>\n        <h1 className={styles.title}>Serial Number Generation</h1>\n      </header>\n\n      <div className={styles.content}>\n        <form onSubmit={handleGenerate} className={styles.form}>\n          <div className={styles.field}>\n            <label htmlFor=\"componentType\">Component Type:</label>\n            <input\n              id=\"componentType\"\n              type=\"text\"\n              value={componentType}\n              onChange={(e) => setComponentType(e.target.value)}\n              required\n            />\n          </div>\n\n          <div className={styles.field}>\n            <label htmlFor=\"productionStatus\">Production Status:</label>\n            <input\n              id=\"productionStatus\"\n              type=\"text\"\n              value={productionStatus}\n              onChange={(e) => setProductionStatus(e.target.value)}\n              required\n            />\n          </div>\n\n          <div className={styles.field}>\n            <label htmlFor=\"n2\">N2 (Component Placement & Modules):</label>\n            <input\n              id=\"n2\"\n              type=\"text\"\n              value={n2}\n              onChange={(e) => setN2(e.target.value)}\n              required\n            />\n          </div>\n\n          <div className={styles.field}>\n            <label htmlFor=\"flavor\">Flavor (N3):</label>\n            <input\n              id=\"flavor\"\n              type=\"number\"\n              value={flavor}\n              onChange={(e) => setFlavor(e.target.value)}\n              min=\"0\"\n              max=\"4\"\n              required\n            />\n          </div>\n\n          <div className={styles.field}>\n            <label>\n              <input\n                type=\"checkbox\"\n                checked={batch}\n                onChange={() => setBatch(!batch)}\n              />\n              Generate in Batch\n            </label>\n          </div>\n\n          <button type=\"submit\" className={styles.submitBtn}>Generate Serial Numbers</button>\n        </form>\n\n        {feedback && <p className={styles.feedback}>{feedback}</p>}\n\n        {serialNumbers.length > 0 && (\n          <div className={styles.results}>\n            <h2>Generated Serial Numbers:</h2>\n            <ul>\n              {serialNumbers.map((serial, index) => (\n                <li key={index}>{serial}</li>\n              ))}\n            </ul>\n          </div>\n        )}\n      </div>\n\n      <footer className={styles.footer}>\n        <p>© 2024 Your Company</p>\n      </footer>\n    </div>\n  );\n}\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}